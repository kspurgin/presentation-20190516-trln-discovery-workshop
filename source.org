#+AUTHOR: Kristina M. Spurgin
#+TITLE: Overview of TRLN Discovery Data
#+EMAIL: kspurgin@email.unc.edu
#+DATE: 2019-05-16
#+REVEAL_TRANS: none
#+REVEAL_THEME: sky
#+REVEAL_MIN_SCALE: 1
#+REVEAL_MAX_SCALE: 1
#+REVEAL_MARGIN: 0
#+OPTIONS: toc:nil 
#+OPTIONS: num:nil
#+OPTIONS: ^:nil
#+REVEAL_TITLE_SLIDE_BACKGROUND: ./images/Background1.png
#+EXPORT_FILE_NAME: index.html

#+BEGIN_COMMENT
After export:

- Add to Reveal.initialize at bottom of index.html
width: "95%",
height: "95%",

- Remove created date from top 
#+END_COMMENT

* What we'll cover
 - High level overview of data in TRLN Discovery
 - ETL process/tooling
 - Brief intro to conceptual foundations for the data model
 - *Focus on MARC as initial data source*

#+BEGIN_NOTES
Our ILS-based catalogs, with their MARC-based bibliographic data, are the largest data source. Tooling for this is well developed and centralized
#+END_NOTES

* What we won't cover
 - The details of anything
 - Processes for non-MARC data sources
   - ICPSR Datasets shared records (DDI/XML record set)
   - Odum Dataverse shared records (DC OAI feed)
   - Finding aid data merged into bib data
   - Syndetics data merged into bib data
   - Data pulled in from various APIs at catalog page load time
 - Helper applications used to generate lookups/data transformation maps

* ETL overview - Institution-specific processes
Source data (MARCXML or MARC binary)

⬇️

((([[https://github.com/trln/marc-to-argot][MARC-to-Argot]])))

⬇️

[[https://github.com/trln/data-documentation/tree/master/argot][Argot]] (nested JSON format)

⬇️

((([[https://github.com/trln/spofford-client][spofford-client]]))) 

#+BEGIN_NOTES
Getting the MARC source data out of ILS: 
Completely institution-specific. 
This is the "extract" step and it's a big improvement for some institutions that TRLN Discovery largely decouples the extract part from the transformation part. 

MARC-to-Argot:
 - allows most of the standard transformation of MARC to Argot to be written ONCE and used by all institutions
 - any institution can override the way any Argot field is populated, if they need to do something that isn't standard

spofford-client:
 - command line tool for packaging up Argot files and sending them to Spofford for ingest

Non-MARC source data note: Basically any data that can be transformed into valid Argot can then be ingested into Spofford, which accepts only Argot and cares not for source data format. Processes to create valid Argot from non-MARC sources will be institution-specific.
#+END_NOTES

* ETL overview - Central processes
|----------------+---------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Application    | Uses...             | To...                                                                                                                                                                  |
|----------------+---------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| ((([[https://github.com/trln/trln-ingest][Spofford]]))) | PostgreSQL db       | Maintain last-ingested Argot for each item, transaction info, deletion status                                                                                          |
|                | ((([[https://github.com/trln/argot-ruby][argot-ruby]])))    | Basic validation of Argot; Flatten/explode hierarchical Argot according to specified patterns ("Enriched Argot"); Add field name suffixes required for Solr processing |
|                |                     | Manage Solr indexing processes (adds, updates, deletes)                                                                                                                |
| Solr           |                     | The actual underlying index used by the Blacklight application                                                                                                         |
|                | dynamic Solr schema | Create additional copies/versions of incoming fields for use in Solr (resulting fields having different suffixes)                                                      |
|----------------+---------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------|


* Transformation: MARC -> Argot - Name data

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
*MARC*

#+BEGIN_SRC 
=100  0\$aIntiz̤ār Ḥusain,$d1925-2016,$eauthor.
=240  10$aDin aur dāstān.$lEnglish
=245  10$aDay ;$band, Dastan : two novellas /$cIntizar Husain ;
        translated by Nishat Zaidi and Alok Bhalla.
=700  1\$aZaidi, Nishat,$etranslator.
=700  1\$aBhalla, Alok,$etranslator.
=700  02$aIntiz̤ār Ḥusain,$d1925-2016.$tDin.$lEnglish.
=700  02$aIntiz̤ār Ḥusain,$d1925-2016.$tDāstān.$lEnglish.
#+END_SRC

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width: 50%">
*Argot*

#+BEGIN_SRC 
"names":[
      {"name":"Intiz̤ār Ḥusain, 1925-2016",
       "rel":["author"],
       "type":"creator"},
      {"name":"Zaidi, Nishat",
       "rel":["translator",
       "type":"contributor"},
      {"name":"Bhalla, Alok",
       "rel":["translator"],
       "type":"contributor"}
   ],
"creator_main":["Intiz̤ār Ḥusain, 1925-2016, author"],
"statement_of_responsibility":[
   {"value":"Intizar Husain ; translated by Nishat Zaidi and Alok
             Bhalla."}
],
#+END_SRC

#+REVEAL_HTML: </div>

* Transformation: MARC -> Argot - Title and work data

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
*MARC*

#+BEGIN_SRC 
=100  0\$aIntiz̤ār Ḥusain,$d1925-2016,$eauthor.
=240  10$aDin aur dāstān.$lEnglish
=245  10$aDay ;$band, Dastan : two novellas /$cIntizar Husain ;
        translated by Nishat Zaidi and Alok Bhalla.
=700  1\$aZaidi, Nishat,$etranslator.
=700  1\$aBhalla, Alok,$etranslator.
=700  02$aIntiz̤ār Ḥusain,$d1925-2016.$tDin.$lEnglish.
=700  02$aIntiz̤ār Ḥusain,$d1925-2016.$tDāstān.$lEnglish.
#+END_SRC

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width: 50%">
*Argot*

#+BEGIN_SRC 
"title_main":[
   {"value":"Day ; and, Dastan : two novellas"}
],
"title_sort":"day and dastan two novellas",
"included_work":[
   {"type":"included",
    "author":"Intiz̤ār Ḥusain, 1925-2016.",
    "title":["Din.", "English."]}
   {"type":"included",
    "author":"Intiz̤ār Ḥusain, 1925-2016.",
    "title":["Dāstān.", "English."]}
],
"this_work":[
   {"type":"this",
    "author":"Intiz̤ār Ḥusain, 1925-2016",
    "title":["Din aur dāstān.", "English"]}
],
#+END_SRC

#+REVEAL_HTML: </div>

* Transformation: Argot -> Enriched Argot - Name data
Principles: Argot as pattern language for data -- Driven by desired SEARCH and DISPLAY behavior in application

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
*Argot*

#+BEGIN_SRC 
"names":[
      {"name":"Intiz̤ār Ḥusain, 1925-2016",
       "rel":["author"],
       "type":"creator"},
      {"name":"Zaidi, Nishat",
       "rel":["translator",
       "type":"contributor"},
      {"name":"Bhalla, Alok",
       "rel":["translator"],
       "type":"contributor"}
   ],
"creator_main":["Intiz̤ār Ḥusain, 1925-2016, author"],
"statement_of_responsibility":[
   {"value":"Intizar Husain ; translated by Nishat Zaidi and Alok
             Bhalla."}
],
#+END_SRC

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width: 50%">
*Enriched Argot*

#+BEGIN_SRC 
"names_creator_t": "Intiz̤ār Ḥusain, 1925-2016, author",
"names_contributor_t": [
  "Zaidi, Nishat, translator",
  "Bhalla, Alok, translator"
],
"author_facet_f": [
  "Intiz̤ār Ḥusain, 1925-2016",
  "Zaidi, Nishat",
  "Bhalla, Alok"
],
"names_a": [
  "{\"name\":\"Intiz̤ār Ḥusain, 1925-2016\",\"rel\":\"author\"}",
  "{\"name\":\"Zaidi, Nishat\",\"rel\":\"translator\"}",
  "{\"name\":\"Bhalla, Alok\",\"rel\":\"translator\"}"
],
"author_suggest": [
  "Intiz̤ār Ḥusain, 1925-2016",
  "Zaidi, Nishat",
  "Bhalla, Alok"
],
"creator_main_a": ["Intiz̤ār Ḥusain, 1925-2016, author"],
"statement_of_responsibility_t_stored": "Intizar Husain ; translated
   by Nishat Zaidi and Alok Bhalla."
}
#+END_SRC

#+REVEAL_HTML: </div>

#+BEGIN_NOTES
The Solr data required to drive our desired SEARCH and DISPLAY behaviors requires the same source data to be written to separate fields in slightly different ways. 

Fields ending with _t are going to be sent through special processes (normalization, parsing, etc) and be indexed to support searching. 

Fields ending with _a are stored in the index to be used in building the display.

Writing the logic to directly transform all MARC fields where names occur into the format on the right would have been quite repetitive and tedious. 

Instead we chose to directly transform MARC into Argot that indentifies the name components that we can use as a pattern to generate all the repetitive stuff needed in Solr. 

names_creator_t and names_contributor_t are both searchable in the keyword and author indexes, but we wanted to relevance boost known creators in this search. We use the type element to derive the field name, and index the whole name+rel together so if someone specifically wants this person as a translator, they can find that. 

author_facet_f contains names that will appear in the author facet. We don't want relator terms included there. Lots of our records don't have relator terms in them, and we did not want to build INTO the catalog ways to search that we knew would return artificially small/split results. 

names_a is our names for display. We have the names part separate from the relator part, so that the text from both can be shown, but only the name part gets turned into a search query link (for the same reason we exclude relators from the author facet).

author_suggest drives the as-you-type suggestions, which needs its own fields in Solr. 

creator_main_a is stored for display because not every record has a statement of responsibility we can display. It doesn't need to be indexed because whatever is in this field will be indexed as author in names_creator_t.

statement_of_responsibility_t_stored is indexed as author data becasue it usually contains author names in a different form than the other fields, providing some kind of variant access. It also needs to be displayed... 

#+END_NOTES

* Transformation: Enriched Argot -> Solr
One Enriched Argot field becomes two Solr fields

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
*Enriched Argot field*

#+BEGIN_SRC 
statement_of_responsibility_t_stored
#+END_SRC

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width: 50%">
*Solr fields*

#+BEGIN_SRC 
statement_of_responsibility_a
statement_of_responsibility_t
#+END_SRC

#+REVEAL_HTML: </div>



